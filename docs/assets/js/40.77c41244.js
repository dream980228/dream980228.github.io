(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{498:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("世上本没有路，走的人多了，也便成了路。世上还有很多美好的地方，从未踏足，当你选择，抬起右脚的时候，黑暗中，却不知前方是深坑还是平地，硬着头皮踩吧，大不了从头再来。")])]),t._v(" "),s("h2",{attrs:{id:"过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),s("p",[t._v("从上周六开始，就在弄这个东西，每天都会去实现一些东西，一路上，虽然走了很多的弯路，但是，现在我的心里还是很高兴的，一步步hexo框架，本地与github相连接，添加一些小功能，换主题，改背景，持续集成CI。。。。一幕幕，说起来都是泪啊，有时候，为了一个很小的问题，我都要去花费很长时间才能解决掉，掉进坑去，再爬起来，掉进坑去，再爬起来。所幸的是，也算是有了一个结果。")]),t._v(" "),s("h2",{attrs:{id:"遇到的一些坑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遇到的一些坑"}},[t._v("#")]),t._v(" 遇到的一些坑")]),t._v(" "),s("p",[t._v("我是用hexo框架来做的")]),t._v(" "),s("h3",{attrs:{id:"先就拿本地与github相连接来说吧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#先就拿本地与github相连接来说吧"}},[t._v("#")]),t._v(" 先就拿本地与github相连接来说吧")]),t._v(" "),s("p",[t._v("好多教程上根目录配置文件都是这样的")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" git\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" git@github.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("xxx/xxx.github.io.git\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n  xxx代表用户名\n")])])]),s("p",[t._v("是可以不需要密码就可以相互连接的，但是到我这，不行，起初我还不知道ssh有何用啊，就一直以为是ssh的问题，结果就是怎么着也不行，最后改成了这样的才行")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" git\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/xxx/xxx.github.io.git\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n  xxx代表用户名\n")])])]),s("p",[t._v("结果一下子就成功了，唉，现在想想，当时是真的傻啊。")]),t._v(" "),s("h3",{attrs:{id:"还有就是添加小功能了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#还有就是添加小功能了"}},[t._v("#")]),t._v(" 还有就是添加小功能了")]),t._v(" "),s("p",[t._v("比方说，点击有小爱心了，按照教程完完整整的执行，"),s("code",[t._v("hexo s")]),t._v("一下，怀着兴奋的心情本地一打开，我点点点，啥也没有啊，再刷新一下，还是没有，最后好像不知道是文件放的位置有问题还是js文件已经失效了，最后又弄了好长时间才弄好")]),t._v(" "),s("h3",{attrs:{id:"next主题动态背景问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#next主题动态背景问题"}},[t._v("#")]),t._v(" next主题动态背景问题")]),t._v(" "),s("p",[t._v("平常我们见到的都是一动不动的背景，更多的是看网页中的一些内容，突然看见别人有个动态背景的博客，觉得好羡慕啊，自己也要弄一个，怀着这样的心情，就去做了，看了好多网上的都是老版的next主题，与现在的v7版本，有了一些改变，结果就是各种的出错，看了好多都是这样的")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("canvas_nest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("p",[t._v("让把canvas_next后面添加一个true，结果添加上去就开始报错\n现在已经变成了这样")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("canvas_nest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("onmobile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# display on mobile or not")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0,0,255"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RGB values, use ',' to separate")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the opacity of line: 0~1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("-1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# z-index property of the background")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the number of lines")]),t._v("\n")])])]),s("p",[t._v("需要把enable后面改成true，但仅仅如此就可以实现动态背景吗？试一下，结果是不行的，我们要这样做")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("在_config.yml中有这么一段：\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Dependencies: https://github.com/theme-next/theme-next-canvas-nest")]),t._v("\n")])])]),s("p",[t._v("说明要想实现，下要下载这个文件的，我们只需要执行以下命令即可")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("git clone https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/theme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("next/theme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nest source/lib/canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nest\n")])])]),s("p",[t._v("next提供了四种动态背景，其他三种的使用方法大致相同")]),t._v(" "),s("h3",{attrs:{id:"源文件保存问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#源文件保存问题"}},[t._v("#")]),t._v(" 源文件保存问题")]),t._v(" "),s("p",[t._v("做完以上之后，我又想到了一个问题，我们的博客源文件不是一直在我们的电脑上，假如有一天，电脑不在身边或者坏了，那么我们该怎么办呢？对，我们要把代码备份起来，很多人的实现方式是在github上再添加一个分支，用于保存源代码。\n好，那我也去这么做吧，"),s("code",[t._v("git branch hexo")]),t._v("创建一个新分支hexo，"),s("code",[t._v("git checkout hexo")]),t._v("将指针指向hexo，"),s("code",[t._v("git add .")]),t._v("暂存所有文件，然后"),s("code",[t._v('git commit -m "说明此次更改原因"')]),t._v("将暂存区内容提交到本地版本库，最后"),s("code",[t._v("git push origin hexo")]),t._v("将所有文件提交到github上，好吧，传是传上去了，那么我拉下来还能不能用呢？\n首先要将hexo分支设置成主分支，"),s("code",[t._v("git clone github的地址")]),t._v("将github保存的源文件克隆下来，执行以下三条指令，"),s("code",[t._v("npm install hexo")]),t._v(","),s("code",[t._v("npm install")]),t._v(","),s("code",[t._v("npm install hexo-deployer-git")]),t._v(",这时候再在本地检查一下拉下来的源文件是否是否还是原来的样子，\n三条指令依次执行 "),s("code",[t._v("heox clean")]),t._v(","),s("code",[t._v("hexo g")]),t._v(","),s("code",[t._v("hexo s")]),t._v(",这时候本地服务器就已经搭建成功了，再打开一看，咦，我的动态背景消失了，这时候我就知道了，我掉坑\n去了，找了一天还是找我班一个大神解决的。")]),t._v(" "),s("h4",{attrs:{id:"上传到github上next文件中是空的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#上传到github上next文件中是空的"}},[t._v("#")]),t._v(" 上传到github上next文件中是空的")]),t._v(" "),s("p",[t._v("这个问题是next文件中隐藏了一个"),s("code",[t._v(".git")]),t._v("文件，只要删除就好了")]),t._v(" "),s("h4",{attrs:{id:"动态效果没了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态效果没了"}},[t._v("#")]),t._v(" 动态效果没了")]),t._v(" "),s("p",[t._v("这个问题是lib中也会隐藏一个"),s("code",[t._v(".git")]),t._v("文件，下面是路径：根目录名\\themes\\next\\source\\lib\\canvas-nest，"),s("s",[t._v("删除就好")]),t._v("，不不，还有另外一个问题，很重要，在上面花了很长的时间，"),s("code",[t._v(".gitignore")]),t._v("这个文件里面配置的是，在上传过程中哪些文件需要忽略掉，哪些文件很重要，动态效果没了，就是由这两个问题产生的，这个文件的路径是：根目录名\\themes\\next，这个是next主题，所以就是next，将里面配置文件保存成如下")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v(".DS_Store\n.idea/\n"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("*.log")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("*.iml")]),t._v("\nyarn.lock\npackage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("lock.json\nnode_modules/\n")])])]),s("p",[t._v("其实就是将下面的一大块都删除掉，这时候，我再上传代码到hexo分支时，发现我的动态文件就不会消失了")]),t._v(" "),s("h3",{attrs:{id:"接下来在说说持续集成ci"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接下来在说说持续集成ci"}},[t._v("#")]),t._v(" 接下来在说说持续集成CI")]),t._v(" "),s("p",[t._v("听到这个名字是不是感觉很高大上，事实上它所实现的，也很能方便我们日常使用博客。假如没有这个东西，我们每次写我们写完博客要怎么操作呢？假如现在是在master分支，好，我现在要使用三条指令将文章更新到github的master分支中，分别是"),s("code",[t._v("hexo clean")]),t._v(","),s("code",[t._v("hexo g")]),t._v(","),s("code",[t._v("hexo d")]),t._v(";接下来我还要更新我的hexo源代码分支，需要四条指令"),s("code",[t._v("git checkout hexo")]),t._v(","),s("code",[t._v("git add .")]),t._v(","),s("code",[t._v('git commit -m "更新"')]),t._v(","),s("code",[t._v("git push origin hexo")]),t._v(",整整需要7条指令，那么我们用持续集成CI需要几条呢？3条就够了，"),s("code",[t._v("git add .")]),t._v(","),s("code",[t._v('git commit -m "更新"')]),t._v(","),s("code",[t._v("git push origin hexo")]),t._v("，让我们更新博客变得更加的简单了，有了更多的时间花费在如何写博客上，而不是去敲打命令，给大家提供一个网址，那上面讲的持续集成CI还不错，")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//easyhexo.com/1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Hexo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("install"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("and"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config/1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("continuous"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("integration.html"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#%E4%BB%80%E4%B9%88%E6%98%AF%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%EF%BC%9F")]),t._v("\n")])])]),s("p",[t._v("执行 "),s("code",[t._v("hexo")]),t._v(" 时 "),s("code",[t._v("-bash: hexo: command not found")]),t._v(" 出现这样的命令怎么办？\n这是环境变量所导致的。\n在你的博客根目录中找到如下类似目录并复制下来E:\\github\\srcrs.github.io\\node_modules\\hexo\\bin\n打开控制面板\\系统和安全\\系统\\高级系统设置\\环境变量\n在xxx的用户变量下和系统变量下\n对path变量进行编辑，新建，将刚才复制的路径添加进去。\n然后再重新bash就可以解决了")])])}),[],!1,null,null,null);a.default=n.exports}}]);