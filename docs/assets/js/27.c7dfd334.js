(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{487:function(t,e,n){"use strict";n.r(e);var a=n(2),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("以前从未系统的了解过nginx，对于以后的配置学习和使用还是必不可少的。")]),t._v(" "),n("h2",{attrs:{id:"nginx的作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx的作用"}},[t._v("#")]),t._v(" nginx的作用")]),t._v(" "),n("p",[n("svg",{staticStyle:{cursor:"pointer","max-width":"100%","max-height":"209px"},attrs:{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",version:"1.1",width:"222px",viewBox:"-0.5 -0.5 222 209",content:'<mxfile host="app.diagrams.net" modified="2021-06-20T09:03:33.789Z" agent="5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.101 Safari/537.36" etag="Jvo2qQlJsIrPnGYJRf4I" version="14.7.0" type="github"><diagram id="n4fDj0X6GQweX54VeyBD" name="Page-1">zZRdb4IwFEB/zX1cQili+wiC82XJjEv23EgFMrCkVAF//VopIlGT7WGLCQm3p7dfpzcFvCjbV8mq7E0kvADXSVrAEbgu8lxf/wzpejKnXg9SmSc2aQSb/MQtdCw95AmvJ4lKiELl1RRuxX7Pt2rCmJSimabtRDFdtWIpvwGbLStu6WeeqKynxJ2PfMXzNBtWRj7te0o2JNuT1BlLRHOFcAx4IYVQfVS2C14YeYOXftzyQe9lY5Lv1U8GFH7TNYf3Y7U81WrNP1Zr6b4gO82RFQd7YohnQAIICMQUaASUngkB4kM8h8CHMLQnUt2gSS+lb0Q3wibLFd9UbGt6Gl0UmmWqLHQL6ZDVVX9Nu7zlemdhraT4urjVVuzkRy4Vbx+eFV0M6tLjouRKdjrFDnBnVrqtOm9oN+MdoqHEssn9Wchs3aSXuUe1OrB2f2PavW96CSQyAXWAIog9YzfAxrQmxH9209jxJqbxDN8xje6ZRn9lGt8xTSD0gC7PQWQ+ozwCMjckQOZ7dtP+P9a0bo4v07nv6n3H8Tc=</diagram></mxfile>',onclick:"(function(svg){var src=window.event.target||window.event.srcElement;while (src!=null&&src.nodeName.toLowerCase()!='a'){src=src.parentNode;}if(src==null){if(svg.wnd!=null&&!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data=='ready'&&evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute('content')),'*');window.removeEventListener('message',r);}};window.addEventListener('message',r);svg.wnd=window.open('https://viewer.diagrams.net/?client=1&page=0&edit=_blank');}}})(this);"}},[n("defs"),n("g",[n("ellipse",{attrs:{cx:"56",cy:"153",rx:"55",ry:"55",fill:"#ffffff",stroke:"#000000","stroke-width":"2","pointer-events":"all"}}),n("g",{attrs:{transform:"translate(-0.5 -0.5)"}},[n("switch",[n("foreignObject",{staticStyle:{overflow:"visible","text-align":"left"},attrs:{"pointer-events":"none",width:"100%",height:"100%",requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility"}},[n("div",{staticStyle:{display:"flex","align-items":"unsafe center","justify-content":"unsafe center",width:"108px",height:"1px","padding-top":"153px","margin-left":"2px"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[n("div",{staticStyle:{"box-sizing":"border-box","font-size":"0","text-align":"center"}},[n("div",{staticStyle:{display:"inline-block","font-size":"12px","font-family":"Helvetica",color:"#000000","line-height":"1.2","pointer-events":"all","white-space":"normal","word-wrap":"normal"}},[t._v("动静分离")])])])]),n("text",{attrs:{x:"56",y:"157",fill:"#000000","font-family":"Helvetica","font-size":"12px","text-anchor":"middle"}},[t._v("动静分离")])])]),n("ellipse",{attrs:{cx:"110.5",cy:"56.5",rx:"55.5",ry:"55.5",fill:"#ffffff",stroke:"#000000","stroke-width":"2","pointer-events":"all"}}),n("g",{attrs:{transform:"translate(-0.5 -0.5)"}},[n("switch",[n("foreignObject",{staticStyle:{overflow:"visible","text-align":"left"},attrs:{"pointer-events":"none",width:"100%",height:"100%",requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility"}},[n("div",{staticStyle:{display:"flex","align-items":"unsafe center","justify-content":"unsafe center",width:"109px",height:"1px","padding-top":"57px","margin-left":"56px"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[n("div",{staticStyle:{"box-sizing":"border-box","font-size":"0","text-align":"center"}},[n("div",{staticStyle:{display:"inline-block","font-size":"12px","font-family":"Helvetica",color:"#000000","line-height":"1.2","pointer-events":"all","white-space":"normal","word-wrap":"normal"}},[t._v("反向代理")])])])]),n("text",{attrs:{x:"111",y:"60",fill:"#000000","font-family":"Helvetica","font-size":"12px","text-anchor":"middle"}},[t._v("反向代理")])])]),n("ellipse",{attrs:{cx:"166",cy:"153",rx:"55",ry:"55",fill:"#ffffff",stroke:"#000000","stroke-width":"2","pointer-events":"all"}}),n("g",{attrs:{transform:"translate(-0.5 -0.5)"}},[n("switch",[n("foreignObject",{staticStyle:{overflow:"visible","text-align":"left"},attrs:{"pointer-events":"none",width:"100%",height:"100%",requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility"}},[n("div",{staticStyle:{display:"flex","align-items":"unsafe center","justify-content":"unsafe center",width:"108px",height:"1px","padding-top":"153px","margin-left":"112px"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[n("div",{staticStyle:{"box-sizing":"border-box","font-size":"0","text-align":"center"}},[n("div",{staticStyle:{display:"inline-block","font-size":"12px","font-family":"Helvetica",color:"#000000","line-height":"1.2","pointer-events":"all","white-space":"normal","word-wrap":"normal"}},[t._v("负载均衡")])])])]),n("text",{attrs:{x:"166",y:"157",fill:"#000000","font-family":"Helvetica","font-size":"12px","text-anchor":"middle"}},[t._v("负载均衡")])])])]),n("switch",[n("g",{attrs:{requiredFeatures:"http://www.w3.org/TR/SVG11/feature#Extensibility"}}),n("a",{attrs:{transform:"translate(0,-5)","xlink:href":"https://www.diagrams.net/doc/faq/svg-export-text-problems",target:"_blank"}},[n("text",{attrs:{"text-anchor":"middle","font-size":"10px",x:"50%",y:"100%"}},[t._v("Viewer does not support full SVG 1.1")])])])])]),t._v(" "),n("p",[t._v("反向代理：和正向代理相区分，正向代理是通过一个代理服务器上网，类似一个由内到外的过程，而反向代理\n我觉得是由外到内的过程，用户通过访问服务器暴露在外部host:port，能够映射服务器内部的web容器。")]),t._v(" "),n("p",[t._v("负载均衡：当用户访问量达到一定量级时，提升一台物理机的硬件已经不足以应对，则需要用到分而治之的思想了，\n通过多台服务器合作，处理用户的请求，是一对多的一种关系，通过nginx可以将用户的请求分发到不同的服务器。")]),t._v(" "),n("p",[t._v("动静分离：在一个web项目中，有静态资源（图片、js、css等）和动态资源（需要实时访问服务器获取的资源），nginx可\n以判断请求的资源类型，分发到不同的服务器，大概是这样吧。")]),t._v(" "),n("h2",{attrs:{id:"nginx的配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx的配置文件"}},[t._v("#")]),t._v(" nginx的配置文件")]),t._v(" "),n("p",[t._v("默认的nginx配置文件大致如下，")]),t._v(" "),n("div",{staticClass:"language-conf extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('#定义nginx运行的用户\nuser  nginx;\n#nginx的进程数\nworker_processes  auto;\n\n#错误日志的存储\nerror_log  /var/log/nginx/error.log notice;\n#进程文件\npid        /var/run/nginx.pid;\n\n#工作模式与连接数上限\nevents {\n    #单个进程的最大连接数\n    worker_connections  1024;\n}\n\n#设置http服务器\n#只一部分需要配置的内容很多，但是作为初级使用是不需要配置的。\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n                      \'$status $body_bytes_sent "$http_referer" \'\n                      \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n    \n    #需要配置最多配置就在这里\n    include /etc/nginx/conf.d/*.conf;\n}\n')])])]),n("div",{staticClass:"language-conf extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("server {\n    #监听端口号\n    listen       80;\n    listen  [::]:80;\n    #监听ing域名\n    server_name  localhost;\n\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    #匹配Url进行方向代理\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #}\n\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n")])])]),n("h2",{attrs:{id:"环境说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境说明"}},[t._v("#")]),t._v(" 环境说明")]),t._v(" "),n("p",[t._v("https://labs.play-with-docker.com/ 一个免费在线的docker环境服务器")]),t._v(" "),n("h2",{attrs:{id:"反向代理一"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反向代理一"}},[t._v("#")]),t._v(" 反向代理一")]),t._v(" "),n("p",[t._v("实现目标：通过访问nginx能够映射到tomcat。")]),t._v(" "),n("ul",[n("li",[t._v("拉取镜像、运行")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker pull nginx\ndocker pull tomcat\ndocker run -itd --name tomcat-1 -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(":8080 tomcat\ndocker run -itd --name nginx-master -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":80 nginx\n")])])]),n("ul",[n("li",[t._v("解决tomcat访问404")])]),t._v(" "),n("p",[t._v("tomcat默认的访问路径webapps，但是docker版的这个文件夹是空的，真正的是在webapps.list\n需要先将webapps删除，再将webapps.list名字更改为webapps。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf webapps\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" webapps.list webapps\n")])])]),n("ul",[n("li",[t._v("配置nginx")])]),t._v(" "),n("p",[t._v("进入到nginx配置文件所在目录")]),t._v(" "),n("p",[t._v("更改server配置项")]),t._v(" "),n("div",{staticClass:"language-conf extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location / {\n    proxy_pass http://192.168.0.28:8081\n}\n")])])]),n("p",[t._v("保存。")]),t._v(" "),n("p",[t._v("nginx -t 检查nginx配置文件是否正确\nnginx -s reload 重启，新的配置将生效。")]),t._v(" "),n("h2",{attrs:{id:"反向代理二"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反向代理二"}},[t._v("#")]),t._v(" 反向代理二")]),t._v(" "),n("p",[t._v("实现目标：通过访问nginx的不同的路径，能够映射到不同的tomcat服务器。")]),t._v(" "),n("ul",[n("li",[t._v("拉取镜像、运行")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker pull nginx\ndocker pull tomcat\ndocker run -itd --name tomcat-1 -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(":8080 tomcat\ndocker run -itd --name tomcat-2 -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8082")]),t._v(":8080 tomcat\ndocker run -itd --name nginx-master -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":80 nginx\n")])])]),n("ul",[n("li",[t._v("配置服务器显示内容")])]),t._v(" "),n("p",[t._v("默认tomcat服务访问的路径是 webapps/ROOT 目录，docker默认webapps为空文件夹，需要自己在里面创建index.html文件，来显示不同的内容。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入tomcat-1容器中")]),t._v("\ndocker "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it tomcat-1 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" webapps\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" one\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" one\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#写入8081")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" index.html\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入tomcat-2容器中")]),t._v("\ndocker "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it tomcat-2 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" webapps\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" one\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" one\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#写入8082")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" index.html\n")])])]),n("p",[t._v("使用免费的容器反向代理会把url后面的链接带上。")]),t._v(" "),n("ul",[n("li",[t._v("配置nginx")])]),t._v(" "),n("p",[t._v("进入到nginx配置文件所在目录")]),t._v(" "),n("p",[t._v("更改server配置项")]),t._v(" "),n("div",{staticClass:"language-conf extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location ~ /one {\n    proxy_pass httpL//192.168.0.28:8081\n}\nlocation ~ /two {\n    proxy_pass httpL//192.168.0.28:8082\n}\n")])])]),n("p",[t._v("保存。")]),t._v(" "),n("p",[t._v("nginx -t 检查nginx配置文件是否正确\nnginx -s reload 重启，新的配置将生效。")]),t._v(" "),n("h2",{attrs:{id:"负载均衡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[t._v("#")]),t._v(" 负载均衡")]),t._v(" "),n("p",[t._v("上面的反向代理通过访问不同的路径映射到了不同的tomcat服务器，而负载均衡是访问同一个路径，也就是一个请求会根据对应的策略转发到不同的服务器。")]),t._v(" "),n("p",[t._v("实现目标：一个请求能够被转发到不同的服务器上。")]),t._v(" "),n("ul",[n("li",[t._v("拉取镜像、运行")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("docker pull nginx\ndocker pull tomcat\ndocker run -itd --name tomcat-1 -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(":8080 tomcat\ndocker run -itd --name tomcat-2 -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8082")]),t._v(":8080 tomcat\ndocker run -itd --name nginx-master -p "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":80 nginx\n")])])]),n("ul",[n("li",[t._v("配置服务器显示内容")])]),t._v(" "),n("p",[t._v("默认tomcat服务访问的路径是 webapps/ROOT 目录，docker默认webapps为空文件夹，需要自己在里面创建index.html文件，来显示不同的内容。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入tomcat-1容器中")]),t._v("\ndocker "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it tomcat-1 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" webapps\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#写入8081")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" index.html\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入tomcat-2容器中")]),t._v("\ndocker "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it tomcat-2 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" webapps\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#写入8082")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" index.html\n")])])]),n("ul",[n("li",[t._v("配置nginx")])]),t._v(" "),n("p",[t._v("更改server配置项")]),t._v(" "),n("p",[t._v("nginx.conf")]),t._v(" "),n("div",{staticClass:"language-conf extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("upstream myserver {\n    server   192.168.0.8:8081  weight=1;\n    server   192.168.0.8:8082  weight=1;\n}\n")])])]),n("p",[t._v("当所有的请求weight相等的时候就相当于轮询。")]),t._v(" "),n("p",[t._v("conf.d/default.conf")]),t._v(" "),n("div",{staticClass:"language-conf extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("location / {\n    root         html;\n    index        index.html index.htm;\n    proxy_pass   http://myserver;\n}\n")])])]),n("p",[t._v("weight是负载均衡策略的一种。会根据权重的不同，改变请求落在一个包的几率。")]),t._v(" "),n("p",[t._v("nginx/1.21.0默认的负载均衡策略是轮询，会根据时间顺序轮流落在每个服务器上。")]),t._v(" "),n("h2",{attrs:{id:"动静分离"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#动静分离"}},[t._v("#")]),t._v(" 动静分离")])])}),[],!1,null,null,null);e.default=s.exports}}]);